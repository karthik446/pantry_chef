apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: pantry-chef-api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: pantry-chef-api
  template:
    metadata:
      labels:
        app: pantry-chef-api
    spec:
      serviceAccountName: pantry-chef-api
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort }}
            - name: grpc
              containerPort: {{ .Values.service.grpcPort }}
          env:
            - name: HTTP_PORT
              value: "{{ .Values.service.httpPort }}"
            - name: GRPC_PORT
              value: "{{ .Values.service.grpcPort }}"
            - name: DB_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@postgres-postgresql.infrastructure:5432/pantry_chef?sslmode=disable"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: db-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-secrets
                  key: jwt-secret
            - name: NODE_ENV
              value: "production"
            - name: RABBITMQ_URL
              value: {{ .Values.rabbitmq.url | quote }}
            - name: K8S_AUTH_ENABLED
              value: "true"
            - name: K8S_API_URL
              value: "https://kubernetes.default.svc.cluster.local"
            - name: ALLOWED_SERVICE_ACCOUNT
              value: "recipe-agent-service"
            - name: ALLOWED_NAMESPACE
              value: "default"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: k8s-certs
              mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
              readOnly: true
      volumes:
        - name: k8s-certs
          projected:
            sources:
              - serviceAccountToken:
                  path: token
                  expirationSeconds: 3600
                  audience: https://kubernetes.default.svc.cluster.local
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt 